version: "3.7"
services:
  mysql:
    image: yobasystems/alpine-mariadb
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql
      - ./config/mariadb/backups:/backups
    expose:
      - 3306
    restart: always
    networks:
      back:
        ipv4_address: ${NETWORK_BASE}.10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: "mysql"
      PMA_PORT: 3306
    networks:
      back:
        ipv4_address: ${NETWORK_BASE}.12

  cache:
    container_name: redis
    image: redis:alpine
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASS}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      back:
        ipv4_address: ${NETWORK_BASE}.7

  php:
    container_name: php
    build:
      context: ./config/php
      args:
        ENVIROMENT: ${ENVIROMENT}
        WEB_USER: ${WEB_USER}
        U_ID: ${U_ID}
        MAGE_DOMAIN: ${MAGE_DOMAIN}
        SMTP_SERVER: ${SMTP_SERVER}
        SMTP_PORT: ${SMTP_PORT}
        SMTP_USER: ${SMTP_USER}
        SMTP_PASS: ${SMTP_PASS}
    volumes:
      - sock:/sock
      # - ./config/php/ext-xdebug.ini:/usr/local/etc/php/conf.d/ext-xdebug.ini
      - ./src:/home/${WEB_USER}/html
    depends_on:
      - mysql
      - cache
    networks:
      back:
        ipv4_address: ${NETWORK_BASE}.18

  web:
    container_name: web
    build:
      context: ./config/nginx
      args:
        WEB_USER: ${WEB_USER}
        U_ID: ${U_ID}
        PUBLIC_DIR: ${PUBLIC_DIR}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/ssl:/etc/nginx/ssl
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./config/dhparam:/etc/ssl/certs
      - sock:/sock
      - ./src:/home/${WEB_USER}/html
    depends_on:
      - php
    networks:
      back:
        ipv4_address: ${NETWORK_BASE}.3

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./src:/home/${WEB_USER}/html
    depends_on:
      - web
    command:
      [
        "certonly",
        "--webroot",
        "--webroot-path=/home/${WEB_USER}/html",
        "--email",
        "${ADMIN_EMAIL}",
        "--agree-tos",
        "--no-eff-email",
        "--force-renewal",
        "-d",
        "${MAGE_DOMAIN}",
      ]

volumes:
  certbot-etc:
  certbot-var:
  mysqldata:
  sock:

networks:
  back:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_BASE}.0/24
